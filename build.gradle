buildscript {
    dependencies {
        classpath 'ascelion.gradle.plugins:gradle-ascelion-plugin:1.1.0-SNAPSHOT'
    }
}

apply plugin: 'ascelion'
apply plugin: 'java'

group = 'ascelion.shared'

ascelion {
	java {
		api {
			artifactId = "${project.name}-api"
		}
		main {
			dependsOn api
		}
	}
}

dependencies {
	apiCompile 'javax.enterprise:cdi-api'
	apiCompile 'org.apache.commons:commons-lang3'

	compile configurations.apiCompile

	compile 'com.google.guava:guava'
	compile 'commons-io:commons-io'
	
	compile 'org.slf4j:slf4j-api'
	compile 'org.yaml:snakeyaml'
	compile 'org.ini4j:ini4j'
	compile 'com.google.code.gson:gson'

	compile 'org.apache.deltaspike.core:deltaspike-core-api'
//	runtime 'org.apache.deltaspike.core:deltaspike-core-impl'

	testCompile 'junit:junit'

	testCompile 'ascelion.shared:cdi-unit-ext'
	testCompile 'ascelion.shared:cdi-unit-weld'
	
	testCompile 'org.slf4j:jul-to-slf4j'
	testCompile 'org.slf4j:jcl-over-slf4j'
	testCompile 'org.slf4j:log4j-over-slf4j'
	testCompile 'ch.qos.logback:logback-classic'

	testRuntime 'javax.el:javax.el-api'
	testRuntime 'org.jboss.weld.se:weld-se-core'
}

task( cleanLog, type: Delete ) {
	delete '**/*.log'
	outputs.upToDateWhen { false }
}

test {
	dependsOn cleanLog
}
