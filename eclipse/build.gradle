apply plugin: 'java'

sourceSets {
	tckTest {
		java {
			srcDirs 'microprofile/tck/src/main/java'
		}
		resources {
			srcDirs 'microprofile/tck/src/main/resources'
		}
	}
}

dependencies {
	compile project( ':api' )
	compile project( ':conv' )

	compile 'javax.enterprise:cdi-api'
	compile 'javax.annotation:javax.annotation-api'
	compile 'org.eclipse.microprofile.config:microprofile-config-api'
	compile 'ascelion.shared:cdi-utils'
	compile 'ascelion.shared:fmt-log'
	compile 'org.apache.commons:commons-text'

	testCompile 'ascelion.shared:cdi-unit-impl'
	testCompile 'ascelion.shared:cdi-unit-weld'
	testCompile 'org.yaml:snakeyaml'

	tckTestCompileOnly 'org.eclipse.microprofile.config:microprofile-config-tck'
	tckTestCompile 'org.testng:testng'
	tckTestCompile 'org.hamcrest:hamcrest-library'
	tckTestCompile 'org.jboss.arquillian.testng:arquillian-testng-container'
	tckTestRuntime 'org.jboss.arquillian.container:arquillian-weld-embedded'
	tckTestRuntime 'org.jboss.weld.se:weld-se-shaded'
	tckTestRuntime 'ch.qos.logback:logback-classic'
}

testReportDirName = file( "$buildDir/test-output" )

tckTest {
	scanForTestClasses = false

	classpath += files( 'src/test/resources' )

	useTestNG() {
		suites 'tck-suite.xml'
	}
}

eclipse {
	classpath {
		plusConfigurations += [configurations.tckTestRuntime]
	}
}
