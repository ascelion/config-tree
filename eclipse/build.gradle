apply plugin: 'java'

sourceSets {
	tckTest {
		java {
			srcDirs 'microprofile/tck/src/main/java'
		}
		resources {
			srcDirs 'microprofile/tck/src/main/resources'
		}
	}
}

configurations {
	tckTestEclipse
}

dependencies {
	compile project( ':conv' )

	compile 'javax.enterprise:cdi-api'
	compile 'javax.annotation:javax.annotation-api'
	compile 'org.eclipse.microprofile.config:microprofile-config-api'
	compile 'ascelion.shared:cdi-utils'
	compile 'ascelion.shared:fmt-log'

	testCompile 'ascelion.shared:cdi-unit-impl'
	testCompile 'ascelion.shared:cdi-unit-weld'

	tckTestCompile 'org.testng:testng'
	tckTestCompile 'org.hamcrest:hamcrest-library'
	tckTestCompile 'org.jboss.arquillian.testng:arquillian-testng-container'
	tckTestRuntime 'org.jboss.arquillian.container:arquillian-weld-embedded'
	tckTestRuntime 'org.jboss.weld.se:weld-se-shaded'
	tckTestRuntime 'ch.qos.logback:logback-classic'

	tckTestEclipse configurations.tckTestCompile
	tckTestEclipse configurations.tckTestRuntime
	tckTestEclipse files( "$buildDir/classes/java/tckTest/internal" )
}

test {
	enabled = false
}

tckTest {
//	enabled = false

	useTestNG() {
		testReportDirName = file( "$buildDir/test-output" )
		suites 'src/test/tck-suite.xml'
	}
}

eclipse {
	classpath {
		plusConfigurations += [ configurations.tckTestEclipse ]
	}
}
