<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="0" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="108" started-at="2018-01-09T18:37:56Z" finished-at="2018-01-09T18:37:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="108" started-at="2018-01-09T18:37:56Z" finished-at="2018-01-09T18:37:56Z">
      <class name="org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest">
        <test-method status="PASS" signature="arquillianBeforeSuite()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianBeforeSuite" is-config="true" duration-ms="282" started-at="2018-01-09T20:37:55Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeSuite -->
        <test-method status="FAIL" signature="arquillianBeforeClass()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianBeforeClass" is-config="true" duration-ms="0" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <exception class="org.jboss.arquillian.container.test.impl.client.deployment.ValidationException">
            <message>
              <![CDATA[DeploymentScenario contains a target (_DEFAULT_) not matching any defined Container in the registry.
Please include at least 1 Deployable Container on your Classpath.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.jboss.arquillian.container.test.impl.client.deployment.ValidationException: DeploymentScenario contains a target (_DEFAULT_) not matching any defined Container in the registry.
Please include at least 1 Deployable Container on your Classpath.
	at org.jboss.arquillian.container.test.impl.client.deployment.DeploymentGenerator.throwNoContainerFound(DeploymentGenerator.java:250)
	at org.jboss.arquillian.container.test.impl.client.deployment.DeploymentGenerator.throwTargetNotFoundValidationException(DeploymentGenerator.java:243)
	at org.jboss.arquillian.container.test.impl.client.deployment.DeploymentGenerator.validate(DeploymentGenerator.java:102)
	at org.jboss.arquillian.container.test.impl.client.deployment.DeploymentGenerator.generateDeployment(DeploymentGenerator.java:84)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:85)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:143)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:114)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.test.impl.client.ContainerEventController.execute(ContainerEventController.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:103)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:85)
	at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:92)
	at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:96)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:92)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:143)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:114)
	at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.beforeClass(EventTestRunnerAdaptor.java:87)
	at org.jboss.arquillian.testng.Arquillian.arquillianBeforeClass(Arquillian.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.jboss.arquillian.container.test.impl.client.deployment.ValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeClass -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testAutoDiscoveredConfigureSources()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="testAutoDiscoveredConfigureSources" duration-ms="1" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoDiscoveredConfigureSources -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianAfterTest" is-config="true" duration-ms="1" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testAutoDiscoveredConfigureSources()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testAutoDiscoveredConverterManuallyAdded()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="testAutoDiscoveredConverterManuallyAdded" duration-ms="2" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoDiscoveredConverterManuallyAdded -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testAutoDiscoveredConverterManuallyAdded()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="SKIP" signature="arquillianBeforeTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianBeforeTest" is-config="true" duration-ms="0" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianBeforeTest -->
        <test-method status="SKIP" signature="testAutoDiscoveredConverterNotAddedAutomatically()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="testAutoDiscoveredConverterNotAddedAutomatically" duration-ms="1" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoDiscoveredConverterNotAddedAutomatically -->
        <test-method status="PASS" signature="arquillianAfterClass()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianAfterClass" is-config="true" duration-ms="5" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterClass -->
        <test-method status="PASS" signature="arquillianAfterTest(java.lang.reflect.Method)[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianAfterTest" is-config="true" duration-ms="0" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest.testAutoDiscoveredConverterNotAddedAutomatically()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterTest -->
        <test-method status="PASS" signature="arquillianAfterSuite()[pri:0, instance:org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest@55d56113]" name="arquillianAfterSuite" is-config="true" duration-ms="2" started-at="2018-01-09T20:37:56Z" finished-at="2018-01-09T20:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- arquillianAfterSuite -->
      </class> <!-- org.eclipse.microprofile.config.tck.AutoDiscoveredConfigSourceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
